<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xs:annotation>
		<xs:documentation>Electronic service defines the linking and activation definitions of an electronic collection.
		</xs:documentation>
	</xs:annotation>

	<xs:include schemaLocation="rest_notes.xsd"/>
	<xs:include schemaLocation="rest_group_settings.xsd"/>

	<xs:element name="electronic_service" type="electronic_service" />

	<xs:complexType name="electronic_service">
		<xs:annotation>
			<xs:documentation>Electronic service object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get</xs:tags>
					</xs:appinfo>
					<xs:documentation>Identifier of the electronic service in Alma. Output parameter.
						Should be used in subsequent queries regarding the service.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="is_local" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get</xs:tags>
					</xs:appinfo>
					<xs:documentation>Indication whether the service is linked to CZ or local. Output parameter.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>ServiceType</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The type of service. Mandatory.
					Possible code are listed in ServiceType [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, type can be modified only for local services.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" use="optional" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="public_description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The description to display in the search results.
					In the PUT action, public_description can be modified only for local services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="internal_description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>A description for internal reference only.
					In the PUT action, internal_description can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="public_description_override" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The description to display in the search results.
					In the PUT action, public_description_override can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="activation_status"  minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>ElectronicBaseStatus</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>"Available" or "Not Available". Mandatory.
					Possible code are listed in ElectronicBaseStatus [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, activation_status can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="activate_new_portfolios" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Indication whether new portfolios should be automatically activated when they are added to this service.
						This option is available for services that are related to aggregator or selective packages collections.
						In the PUT action, activate_new_portfolios can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="active_from_date" type="xs:date" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Activation date. Default is current date
					In the PUT action, active_from_date can be modified for all services.
					.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="active_until_date" type="xs:date" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Activation end date.
					In the PUT action, active_until_date can be modified for all services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="service_temporarily_unavailable"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>BooleanYesNo</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Temporarily deactivate the service today or on a specific date.
					Possible code are listed in BooleanYesNo [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, service_temporarily_unavailable can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="service_unavailable_date" type="xs:date" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The date for when the service becomes unavailable.
					Relevant only when service_temporarily_unavailable is TRUE.
					If not entered, and service_temporarily_unavailable is TRUE - the current date is used
					In the PUT action, service_unavailable_date can be modified for all services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="service_unavailable_reason" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The reason that the service is unavailable.
					In the PUT action, service_unavailable_reason can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parser" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The destination service.
					In the PUT action, parser can be modified only for local services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parser_override" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>A parser to override the value in the Parser field.
					In the PUT action, parser_override can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parser_parameters" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The linking/access information for the service.
					In the PUT action, parser_parameters can be modified only for local services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="link_resolver_plugin"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>LinkResolverPlugin</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Plugin to be used when resolving.
					Possible code are listed in LinkResolverPlugin [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, link_resolver_plugin can be modified only for local services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="url_type"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>??</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The type of URL that is used for this service:
						Dynamic URL – Select a linking URL dynamically at the service level based on the list of conditions defined in the Dynamic URL field.
						Parser Parameters – An override for the parser’s parameters in the Parser parameters (override) field.
						Possible code are listed in ?????? [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
						In the PUT action, url_type can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="dynamic_url" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>List of IF conditions to determine the service’s linking URL.
						Relevant when URL Type is Dynamic URL.
						In the PUT action, dynamic_url can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parser_parameters_override" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The linking/access information for the service.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="free" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>IsFree</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Whether the service is free.
					Possible code are listed in IsFree [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, free can be modified for all services.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" use="optional" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="crossref_supported"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>CrossRefSupported</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>This parameter specifies whether or not CrossRef is supported for this electronic resource.
					See www.crossref.org for more information regarding the CrossRef DOI (Digital Object Identifier) service.
					Possible code are listed in CrossRefSupported [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, crossref_supported can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="crossref_enabled"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>crossRefEnabled</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Select Yes, No, or Inherit to indicate your preference for using the CrossRef service.
						Possible code are listed in crossRefEnabled [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
						In the PUT action, crossref_enabled can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="proxy_enabled"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>BooleanYesNo</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Whether to enable a proxy.
					Possible code are listed in BooleanYesNo [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, proxy_enabled can be modified for all services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="proxy"  type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>A proxy profile code. This must be a valid code of an integration profile of "Resolver proxy" type.
					In the PUT action, proxy can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="linking_level"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:codeTable>LinkingLevel</xs:codeTable>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The linking level or unit to which the electronic collection will link.
					Possible code are listed in LinkingLevel [code table|https://developers.exlibrisgroup.com/blog/Working-with-the-code-tables-API].
					In the PUT action, proxy_enabled can be modified only for local services.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="desc" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="portfolios"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get</xs:tags>
					</xs:appinfo>
					<xs:documentation>
			       		A count of the number of portfolios. Output parameter.
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="link" type="xs:string" use="optional" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>

			<xs:element  name="authentication_note" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>A note related to authentication (to display in the discovery system).
					In the PUT action, authentication_note can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="public_note" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>Information about the service (to display in the discovery system).
					In the PUT action, public_note can be modified for all services.</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="notes" type="notes" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>The e-collection's related notes.
					In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.
					In the PUT action, notes can be modified for all services.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="group_settings" type="group_settings" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:appinfo>
						<xs:tags>api get post put</xs:tags>
					</xs:appinfo>
					<xs:documentation>List of access restrictions based on location.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="link" type="xs:string" use="optional" />
	</xs:complexType>
</xs:schema>